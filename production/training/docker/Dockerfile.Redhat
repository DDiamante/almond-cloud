FROM registry.access.redhat.com/rhel7/rhel

WORKDIR /home/downloads

MAINTAINER Almond Admin <root@almond.stanford.edu>

# args can be set using --build-args, e.g.:
# --build-arg ALMOUND_CLOUD_VERSION=v1.4.0
ARG ALMOND_CLOUD_VERSION=v1.5.1

# add redhat repos
RUN yum-config-manager \
	--enable rhel-server-rhscl-7-rpms  \
	--enable rhel-7-server-optional-rpms 

# install basic tools
RUN yum -y install  wget curl vim net-tools

# add epel repo 
RUN wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
RUN rpm -ivh epel-release-latest-7.noarch.rpm

# install python3
RUN yum -y install @development \
	rh-python36 \
	rh-python36-numpy \
	rh-python36-scipy \
	rh-python36-python-tools  \
	rh-python36-python-six \
	rh-python36-PyYAML \
        python36-pip \
	python36-devel

RUN scl enable rh-python36 bash

# install nodejs 10.x and yarn
RUN curl -sL https://rpm.nodesource.com/setup_10.x | bash -
RUN curl -sL https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo
RUN yum -y install nodejs yarn

# install cvc4
RUN wget https://almond-static.stanford.edu/test-data/cvc4-1.6-x86_64-linux-opt -O /usr/bin/cvc4
RUN chmod 755 /usr/bin/cvc4

# install other dependencies
RUN yum -y install \
	GraphicsMagick \
	java-1.8.0-openjdk-devel ant \
	hunspell-devel

# install decanlp
RUN pip3 install --user 'git+https://github.com/stanford-oval/decaNLP.git#egg=decanlp'

# downlod source
WORKDIR /home/source
RUN git clone --branch=${ALMOND_CLOUD_VERSION} https://github.com/stanford-oval/almond-cloud.git
# from master (no release branch)
RUN git clone https://github.com/stanford-oval/almond-tokenizer.git

# build almond-tokenizer
WORKDIR /home/source/almond-tokenizer/
RUN ./pull-dependencies.sh 
RUN JAVAHOME=/usr/lib/jvm/java-openjdk ant

# build training
WORKDIR /home/source/almond-cloud/
RUN yarn install

WORKDIR /home/bin
COPY startup.sh /home/bin/startup.sh

WORKDIR /home/workdir
CMD ["/bin/bash", "/home/bin/startup.sh"]
