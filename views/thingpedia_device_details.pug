extends layout

block scripts
  script(src='/javascripts/device.js')

block styles
  link(rel='stylesheet', href='/stylesheets/thingpedia-devices.css')

block page_name
  if device.category === 'online'
    = _("Account: %s").format(device.name)
  else if device.category === 'physical'
    = _("Device: %s").format(device.name)
  else
    = _("Service: %s").format(device.name)

block content
  if device.approved_version === null
    div.alert.alert-warning(role='alert')
      if user && (user.developer_status >= 3 || user.developer_status >=2 && user.developer_org === device.owner)
        form(action='/thingpedia/devices/approve/' + device.id, method='post').form-inline
          input(type='hidden',name='_csrf',value=csrfToken)
          p.form-group= _("This device is not yet approved.")
            | &#x20;
            button(type='submit').btn.btn-success= _("Approve it")
      else if user && user.developer_org === device.owner
        p= _("This device is not yet approved for general use.")
          | &#x20;
          a(href='#request-approval-container',data-toggle='collapse',aria-expanded='false',aria-controls='request-approval-container').btn.btn-default= _("Request approval")
      else
        p= _("This device is not yet approved for general use. You need a developer key to use it.")
  else if device.approved_version !== device.developer_version && user && user.developer_status >= 3
    div.alert.alert-warning(role='alert')
      if user && user.developer_status >= 3
        form(action='/thingpedia/devices/approve/' + device.id, method='post').form-inline
          input(type='hidden',name='_csrf',value=csrfToken)
          p.form-group= _("A newer version of this device was submitted.")
            | &#x20;
            button(type='submit').btn.btn-success= _("Approve it")

  div#request-approval-container.collapse
    div.panel.panel-default
      p.panel-heading= _("Request Approval")

      div.panel-body
        form(action='/thingpedia/devices/request-approval', method='post', data-toggle='validator')
          input(type='hidden',name='_csrf',value=csrfToken)
          input(type='hidden',name='kind',value=device.primary_kind)
        
          div.form-group
            label(for='request-approval-comments').control-label= _("Additional comments (optional)")
            textarea(name='comments').form-control#request-approval-comments

          div.form-group
            button(type='submit').btn.btn-primary= _("Send Request")

  if !device.translated
    div.alert.alert-info(role='alert')
      p
        if online
          = _("The translation for this account in your language is incomplete. ")
        else
          = _("The translation for this device in your language is incomplete. ")
        a(href='/thingpedia/translate/by-id/' + device.primary_kind).btn.btn-default= _("Contribute translation")

  if device.current_job
    div.alert.alert-info(role='alert')
      p
        if user && user.developer_org === device.owner
           = _("The natural language model for this device is being updated. If you recently update the metadata for this device, you should wait until the model is ready before testing.")
        else
           = _("The natural language model for this device is being updated. You should wait until the model is ready before using it.")
      p
        if device.current_job.status === 'queued'
           = _("Status: queued")
        else if device.current_job.status === 'download_dataset'
           = _("Status: phase 1/7: downloading dataset")
        else if device.current_job.status === 'gen_synthetic'
           = _("Status: phase 2/7: generating synthetic set")
        else if device.current_job.status === 'apply_ppdb'
           = _("Status: phase 3/7: augmenting training set")
        else if device.current_job.status === 'prepare'
           = _("Status: phase 4/7: preparing Thingpedia metadata and word embeddings")
        else if device.current_job.status === 'combine_dataset'
           = _("Status: phase 5/7: combining datasets")
        else if device.current_job.status === 'training'
           = _("Status: phase 6/7: training machine learning model")
        else if device.current_job.status === 'uploading'
           = _("Status: phase 7/7: uploading trained model")
        else
           = _("Status: running")

  aside#device-icon-large
    img(src=S3_CLOUDFRONT_HOST + '/icons/' + device.primary_kind + '.png', alt="Icon for " + device.name)

  p#device-description= device.description

  if device.primary_kind === 'org.thingpedia.builtin.thingengine.builtin'
    p
      i= _("This is a builtin device in any Almond.")
  else if device.primary_kind === 'org.thingpedia.builtin.thingengine.remote' || device.primary_kind === 'org.thingpedia.builtin.thingengine'
    p
      i= _("This is an internally created, system device in any Almond.")
  else if device.primary_kind.startsWith('org.thingpedia.builtin.thingengine.')
    p
      i= _("This is a builtin device in certain versions of Almond. It may not be available in the Almond you are using.")

  if user && user.developer_org !== null
    h2.device-subtitle#device-version= _("Class: ")
      code= '@' + device.primary_kind
      if device.approved_version === null
        = _(", version none (approved), %d (developer)").format(device.developer_version)
      else if device.approved_version !== device.developer_version
        = _(", version %d (approved), %d (developer)").format(device.approved_version, device.developer_version)
      else
        = _(", version %d").format(device.approved_version)

  if device.types.length > 0
    h2.device-subtitle= _("Extends: ")
      for k in device.types
        = " "
        a(href='/thingpedia/schemas/by-id/' + k)
          span.label.label-default= k

  if device.child_types.length > 0
    h2.device-subtitle Child Devices:
      for k in device.child_types
        | &#x20;
        a(href='/thingpedia/schemas/by-id/' + k)
          span.label.label-default= k

  div.clearfix

  mixin invocation(inv, name, inv_type)
    li
      code #{name}(#{inv.args.map(function(a) { return (a.is_input ? ('in ' + (a.required ? 'req ' : 'opt ')) : 'out ') + a.name + ' : ' + a.type; }).join(', ')})
      if inv.doc
        | : #{inv.doc}
      br
      = _("Canonical: ")
      span.canonical= inv.canonical
      br
      = _("Local Confirmation: ")
      span.confirmation= inv.confirmation
      br
      = _("Remote Confirmation: ")
      span.confirmation_remote= inv.confirmation_remote
      if inv_type === 'query'
        br
        = _("Polling Interval: ")
        span.poll_interval= inv.poll_interval === 0 ? _("Push-based") : (inv.poll_interval < 0 ? _("Non-deterministic") : _("%d ms").format(inv.poll_interval))

  if Object.keys(queries).length > 0
    h2.device-subtitle= _("Queries")
    ul.device-channels
      for inv, name in queries
        +invocation(inv, name, 'query')

  if Object.keys(actions).length > 0
    h2.device-subtitle= _("Actions")
    ul.device-channels
      for inv, name in actions
        +invocation(inv, name, 'action')

  h2.device-subtitle= _("Example Commands")
  if device.examples.length > 0
    ul.device-examples
      for e in device.examples
        li
          span(title=e.target_code)= e.utterance
  else
    // this cannot really happen anymore, because we show commands of the child types too
    p#no-commands= _("This device has no commands of its own.")

  div.row#device-details-actions
    if authenticated && (user.developer_status >= 3 || device.owner === user.developer_org)
      div.col-md-3
        a.btn.btn-warning.btn-block(href='/thingpedia/upload/update/' + device.id)= _("Update")
      if user.developer_status >= 2 && device.approved_version !== null
        div.col-md-3
          form(action='/thingpedia/devices/unapprove/' + device.id, method='post').form-delete-device
            input(type='hidden',name='_csrf',value=csrfToken)
            button(type='submit').btn.btn-danger.btn-block= _("Remove from collection")
      div.col-md-3
        form(action='/thingpedia/devices/delete/' + device.id, method='post').form-delete-device
          input(type='hidden',name='_csrf',value=csrfToken)
          button(type='submit').btn.btn-danger.btn-block= _("Delete")
    if device.module_type === 'org.thingpedia.v1' || device.module_type === 'org.thingpedia.v2'
      div.col-md-3
        a.btn.btn-default.btn-block(href=S3_CLOUDFRONT_HOST + '/devices/' + device.primary_kind + '-v' + device.developer_version + '.zip')= _("Download code")
    if authenticated && user.locale !== 'en-US'
        div.col-md-2
          a.btn.btn-default.btn-block(href='/thingpedia/translate/by-id/' + device.primary_kind)= _("Translate")
