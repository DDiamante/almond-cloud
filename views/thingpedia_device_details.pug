extends layout

block scripts
  script(src='/javascripts/device.js')

block styles
  link(rel='stylesheet', href='/stylesheets/thingpedia-devices.css')

block page_name
  if online
    = _("Account: %s").format(device.name)
  else
    = _("Device: %s").format(device.name)

block content
  if device.approved_version === null
    div.alert.alert-warning(role='alert')
      if user && user.developer_status >= 3
        form(action='/thingpedia/devices/approve/' + device.id, method='post').form-inline
          input(type='hidden',name='_csrf',value=csrfToken)
          p.form-group= _("This device is not yet approved.")
            |  
            button(type='submit').btn.btn-success= _("Approve it")
      else
        p= _("This device is not yet approved for general use. You need a developer key to use it.")
  else if device.approved_version !== device.developer_version && user && user.developer_status >= 3
    div.alert.alert-warning(role='alert')
      if user && user.developer_status >= 3
        form(action='/thingpedia/devices/approve/' + device.id, method='post').form-inline
          input(type='hidden',name='_csrf',value=csrfToken)
          p.form-group= _("A newer version of this device was submitted.")
            | &#x20;
            button(type='submit').btn.btn-success= _("Approve it")

  if !device.translated
    div.alert.alert-info(role='alert')
      p
        if online
          = _("The translation for this account in your language is incomplete. ")
        else
          = _("The translation for this device in your language is incomplete. ")
        a(href='/thingpedia/translate/by-id/' + device.global_name).btn.btn-default= _("Contribute translation")

  aside#device-icon-large
    img(src=S3_CLOUDFRONT_HOST + '/icons/' + device.primary_kind + '.png', alt="Icon for " + device.name)

  p#device-description= device.description

  if device.primary_kind.startsWith('org.thingpedia.builtin.')
    p
      i= _("This is a builtin interface in every ThingEngine installation.")

  if user && user.developer_org !== null
    h2.device-subtitle#device-version= _("Package: ")
      = device.primary_kind
      if device.approved_version === null
        = _(", version none (approved), %d (developer)").format(device.developer_version)
      else if device.approved_version !== device.developer_version
        = _(", version %d (approved), %d (developer)").format(device.approved_version, device.developer_version)
      else
        = _(", version %d").format(device.approved_version)

  if device.global_name
    h2.device-subtitle= _("Name: ")
      a(href='/thingpedia/schemas/by-id/' + device.global_name)
        code @#{device.global_name}

  if device.types.length > 0
    h2.device-subtitle= _("Types: ")
      for k in device.types
        = " "
        a(href='/thingpedia/schemas/by-id/' + k)
          span.label.label-default= k

  if device.child_types.length > 0
    h2.device-subtitle Child Types:
      for k in device.child_types
        | &#x20;
        a(href='/thingpedia/schemas/by-id/' + k)
          span.label.label-default= k

  div.clearfix

  if Object.keys(triggers).length > 0
    h2.device-subtitle= _("Triggers")
    ul.device-channels
      for inv, name in triggers
        li
          code #{name}(#{inv.args.map(function(a) { return a.name + ' : ' + a.type; }).join(', ')})
          if inv.doc
            | : #{inv.doc}
          if device.global_name
            br
            = _("Canonical: ")
            span.canonical= inv.canonical

  if Object.keys(queries).length > 0
    h2.device-subtitle= _("Queries")
    ul.device-channels
      for inv, name in queries
        li
          code #{name}(#{inv.args.map(function(a) { return a.name + ' : ' + a.type; }).join(', ')})
          if inv.doc
            | : #{inv.doc}
          if device.global_name
            br
            = _("Canonical: ")
            span.canonical= inv.canonical

  if Object.keys(actions).length > 0
    h2.device-subtitle= _("Actions")
    ul.device-channels
      for inv, name in actions
        li
          code #{name}(#{inv.args.map(function(a) { return a.name + ' : ' + a.type; }).join(', ')})
          if inv.doc
            | : #{inv.doc}
          if device.global_name
            br
            = _("Canonical: ")
            span.canonical= inv.canonical

  h2.device-subtitle= _("Example Commands")
  if device.examples.length > 0
    ul.device-examples
      for e in device.examples
        li
          if authenticated && user.developer_status >= 3
            span(title=e.target_json)= e.utterance
          else
            span= e.utterance
          if authenticated
            | &#x20;
            a(href='#',data-example-id=e.id,data-csrfToken=csrfToken).upvote-btn
              span.glyphicon.glyphicon-thumbs-up(aria-hidden='true')
              span.sr-only= _("Upvote")
            | &#x20;
            a(href='#',data-example-id=e.id,data-csrfToken=csrfToken).downvote-btn
              span.glyphicon.glyphicon-thumbs-down(aria-hidden='true')
              span.sr-only= _("Downvote")
          if authenticated && user.developer_status >= 3 && e.type !== 'thingpedia'
            | &#x20;
            if e.click_count < 0
              = _("Hidden")
            else
              a(href='#',data-example-id=e.id,data-csrfToken=csrfToken).hide-example-btn
                = _("Hide")
            | &#x20;
            a(href='#',data-example-id=e.id,data-csrfToken=csrfToken).delete-example-btn
              = _("Delete")
  else
    p#no-commands= _("This device has no commands of its own. You might find how to interact with it by clicking on one of its types.")

  div.row#device-details-actions
    //div.col-md-2
      a.btn.btn-default.btn-block(href='/thingpedia/apps/by-device/' + device.id)= _("Find Apps")
    if authenticated && (user.developer_status >= 3 || device.owner === user.developer_org)
      div.col-md-2
        a.btn.btn-warning.btn-block(href='/thingpedia/upload/update/' + device.id)= _("Update")
      div.col-md-2
        form(action='/thingpedia/devices/delete/' + device.id, method='post').form-delete-device
          input(type='hidden',name='_csrf',value=csrfToken)
          button(type='submit').btn.btn-danger.btn-block= _("Delete")
      div.col-md-2
        form(action='/thingpedia/api/random-rule/by-kind/' + device.global_name, method='get').form-generate-rules
          input(type='hidden',name='_csrf',value=csrfToken)
          button(type='submit').btn.btn-default.btn-block= _("Generate sentences")
    div.col-md-2
      a.btn.btn-default.btn-block(href='https://d1ge76rambtuys.cloudfront.net/devices/' + device.primary_kind + '-v' + device.developer_version + '.zip')= _("Download code")
    if authenticated && user.locale !== 'en-US' && device.global_name
        div.col-md-2
          a.btn.btn-default.btn-block(href='/thingpedia/translate/by-id/' + device.global_name)= _("Translate")
