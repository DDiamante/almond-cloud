@import './variables';

@mixin std-shadow {
  -webkit-box-shadow: 0px 1px 20px 0px rgba(8, 9, 11, 0.1);
  -moz-box-shadow: 0px 1px 20px 0px rgba(8, 9, 11, 0.1);
  box-shadow: 0px 1px 20px 0px rgba(8, 9, 11, 0.1);
}

@mixin card {
  border-radius: 20px;

  -webkit-box-shadow: 0px 1px 20px 0px rgba(8, 9, 11, 0.25);
  -moz-box-shadow: 0px 1px 20px 0px rgba(8, 9, 11, 0.25);
  box-shadow: 0px 1px 20px 0px rgba(8, 9, 11, 0.25);
  transition: box-shadow 1s;
  transition: -webkit-box-shadow 1s;
  transition: -moz-box-shadow 1s;

  &:hover {
    -webkit-box-shadow: 0px 1px 40px 0px rgba(8, 9, 11, 0.3);
    -moz-box-shadow: 0px 1px 40px 0px rgba(8, 9, 11, 0.3);
    box-shadow: 0px 1px 40px 0px rgba(8, 9, 11, 0.3);
  }
}

/* Adapted from https://glennmccomb.com/articles/useful-sass-scss-media-query-mixins-for-bootstrap/ */
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($grid-breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);
    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-below($breakpoint) {
  @if map-has-key($grid-breakpoints, $breakpoint) {
    $breakpoint-value: map-get($grid-breakpoints, $breakpoint);
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin respond-between($lower, $upper) {
  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($grid-breakpoints, $lower) and map-has-key($grid-breakpoints, $upper) {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($grid-breakpoints, $lower);
    $upper-breakpoint: map-get($grid-breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {
    // If lower breakpoint is invalid.
    @if (map-has-key($grid-breakpoints, $lower) == false) {
      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($grid-breakpoints, $upper) == false) {
      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}
